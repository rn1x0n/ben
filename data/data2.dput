structure(list(ResponseID = structure(c(41L, 75L, 8L, 90L, 101L, 
84L, 59L, 85L, 56L, 82L, 45L, 46L, 98L, 6L, 73L, 3L, 22L, 27L, 
14L, 57L, 83L, 4L, 65L, 53L, 2L, 91L, 31L, 88L, 79L, 18L, 95L, 
94L, 50L, 39L, 102L, 51L, 29L, 61L, 71L, 20L, 5L, 43L, 24L, 74L, 
96L, 55L, 19L, 76L, 87L, 44L, 28L, 100L, 86L, 32L, 58L, 35L, 
104L, 72L, 11L, 66L, 48L, 80L, 42L, 23L, 30L, 26L, 7L, 97L, 9L, 
47L, 10L, 108L, 93L, 34L, 60L, 77L, 12L, 1L, 17L, 16L, 70L, 67L, 
25L, 21L, 109L, 105L, 106L, 99L, 92L, 81L, 49L, 69L, 15L, 103L, 
52L, 62L, 36L, 64L, 38L, 33L, 40L, 13L, 107L, 89L, 68L, 37L, 
78L, 54L, 63L), .Label = c("R_0D6qvIePgqBMuMt", "R_0jGNEyloritHs3z", 
"R_0OgDBstVCfKmqmV", "R_0rfTPgIRpokEkKh", "R_0rHCMYAFnxqmlZn", 
"R_0USZpagbLCc7IPP", "R_12Kovk0EAqherQo", "R_1CqMwxgZh2MXsG7", 
"R_1Csa4z6OLpD2blp", "R_1gBc3uvafgowUaq", "R_1IpmUjnjiEFkT5E", 
"R_1LTNWK0miT22HLW", "R_1meHvKfPu4HdSd1", "R_1OxfCGDPk8DMDa4", 
"R_1RqOaVurl6ye2PP", "R_1UnzIR2fdUZMRTf", "R_246Q9IoZldcWP1H", 
"R_25Y56UiuAzaDUup", "R_2aB0Fd7rKPxPxaZ", "R_2axZo11Hx70fm3j", 
"R_2Cwyh9OaysmfcO6", "R_2dEVSVeuCmSPkD1", "R_2EE4O4qi8i0VPuq", 
"R_2OHWlDHf1tN1bsL", "R_2qCwxgVOaUtjlw3", "R_2SJ59ZCG53QNNS4", 
"R_2TR7TWVYihVHD3Q", "R_2TTwkqo7cIz8G7y", "R_2xFTKbsq0tmJcg4", 
"R_2y7t7OmARLGhnqH", "R_2ygrCbjczYdFxxO", "R_2ZBKeMikZoIxgLR", 
"R_30qV21iLgHa1EWN", "R_33shvl0nMa6oAU1", "R_3EKhwNmGg0zuJKX", 
"R_3eoBbNnGqQDSKAh", "R_3GiVztW22OM8dUI", "R_3GoVMiSBxuA2eFm", 
"R_3gVz8MNHoNeenS5", "R_3HnbfPVoo1Zztlg", "R_3JK36cnKu1GgqKV", 
"R_3lLEAMrvIvcUGNv", "R_3n1vNjq3T8wz1PE", "R_3oT19zGy7htGNf7", 
"R_3PQNwqgK6YhT1bb", "R_3QQ7Zugdoly5SCR", "R_3sjDl33BN4HkKuM", 
"R_3UbJoltXBOUe2jj", "R_3WdhiN6ba6KSKFL", "R_3x77eUbTEqaxkJT", 
"R_40gxfLjwfeHwNMN", "R_4NJduxUr673Zui9", "R_4OPRD1g4zROMGEJ", 
"R_4Z8M45vF1FdfXXn", "R_553D4pJ2dClLU8t", "R_57S3Jv4YG7F5NmB", 
"R_5iDIhGa8K1wpI8d", "R_5o1mKsFBvFzrM8p", "R_5zh0UCv5KQnWZK9", 
"R_6FE2FRnWnAWSy2h", "R_6rn1APRxssGN2O9", "R_6sP8UJAan2qzZCl", 
"R_6WmmkRsSdp8Nm7z", "R_6X04dSKEkRNZqT3", "R_6XBbLmIhxsrDLAp", 
"R_6yhtps18SLiajv7", "R_79z3Xa8CH3ng1kp", "R_86z92KDCz52c19P", 
"R_8B16vNC4qD3sSuV", "R_8GL1O0vXvupPwCp", "R_8raDTwy7qoRrX3D", 
"R_8xnHbjwSblc5WQ9", "R_9KQQUoGMXVqVClv", "R_9n6fmK9EXtNJlhb", 
"R_9odepHyhc1joxAV", "R_9ZVfYRzRAF9DSbb", "R_afM87BBlj4hFBBP", 
"R_aWCaTu0QUaZBSFn", "R_b9saMm10RnvE0Op", "R_bayLB3HtvCml8c5", 
"R_bEg3hPY9hLVMel7", "R_byBhk8WeDzsKDwV", "R_cHKVCksx0OloEEB", 
"R_cM7sTN1zHLc0B2l", "R_cN5cg70dDYOLeDP", "R_cx5bTyUbHHLAKIR", 
"R_DcrPhDqyqsXChix", "R_dfYN18dALTatjP7", "R_dgmELP8Hs64yOTX", 
"R_dhuJs36wk5Su2Pj", "R_dok1oM7XNr3AZIV", "R_e5HPSQxPj5heGup", 
"R_e5LhTA0KLySBPjD", "R_eaCQ6WCiZPKDORv", "R_eDLNZz9ncBfQuQ5", 
"R_eDUyQ5fUfAG8Pwp", "R_egEPBsGVRufuUGV", "R_egvce26Zh7MNabr", 
"R_elFFRabvDcVTZE9", "R_eQI1aIntjE9ulJH", "R_es4fzluUrUz1sEZ", 
"R_etFBgAO3ba0CIAd", "R_eVgIDV18oLyatbT", "R_ewDRpt2hh75sw61", 
"R_R3MnTwKnjXrbrHP", "R_sXpCYOZwz9lBGwh", "R_vuDu2GW6yMQ6UZb", 
"R_x0mGMsVzgtWGKdP", "R_ZsJ1EkMtRr0Z7jj"), class = "factor"), 
    Constructive.voice.behaviour = c(5, 5.4, 6.2, 4, 5, 6, 6, 
    6.2, 6, 5.8, 6, 5, 4.6, 4, 7, 4.4, 4.6, 4, 4.8, 5, 5, 5, 
    6, 7, 7, 4.4, 4.4, 4, 6, 5, 5.6, 6, 7, 7, 5, 4.2, 5, 5, 5.6, 
    7, 6, 3.6, 5, 4.4, 6, 6, 7, 5, 5, 5.6, 5.8, 4.4, 5.2, 5.8, 
    3.4, 5.2, 4.8, 5.8, 5.8, 5, 6, 5.6, 5.4, 6, 5.2, 5.4, 5.6, 
    6.6, 6, 2, 7, 5.4, 6, 6, 5, 5, 7, 5, 4.4, 3.8, 4.6, 6, 5.8, 
    6, 6, 7, 6, 6.6, 6, 6, 5.8, 6, 5.6, 5.4, 5.8, 5.2, 5.6, 5.8, 
    6, 4.8, 6, 4.6, 5.8, 6, 5.2, 7, 6.6, 5, 6), Power.distance = c(4.2, 
    1.2, 2.2, 1.6, 3.4, 3, 1, 1.6, 6.6, 1, 3, 2.6, 5.6, 2.6, 
    1.6, 1.4, 3.2, 2, 2.2, 3, 3, 2.8, 4, 2, 1, 3.4, 1.6, 1, 1.6, 
    2.6, 1, 1, 3, 1.4, 4.2, 4.2, 2.2, 3.8, 3.8, 2.2, 2, 2, 3.6, 
    3.6, 1.4, 2.6, 1.6, 2, 2.4, 2.4, 2.8, 3.2, 2.4, 1.4, 3.4, 
    2.4, 3, 2.4, 2.4, 2.6, 1, 3.6, 1.8, 1, 3.6, 3, 3.2, 2.8, 
    2.2, 2.6, 1.6, 1, 1.2, 2, 3, 3, 2, 2.6, 2.6, 3, 2, 2.6, 3.2, 
    3.2, 3.2, 1.8, 1, 2, 1.8, 4, 2, 1, 2, 2.4, 5.6, 1.4, 2, 2, 
    4, 3, 2.8, 2.8, 1.4, 1.8, 2, 3.4, 1.8, 3.4, 3), Power.distance.C = c(0.6, 
    -2.4, -1.4, -2, -0.2, -0.6, -2.6, -2, 3, -2.6, -0.6, -1, 
    2, -1, -2, -2.2, -0.4, -1.6, -1.4, -0.6, -0.6, -0.8, 0.4, 
    -1.6, -2.6, -0.2, -2, -2.6, -2, -1, -2.6, -2.6, -0.6, -2.2, 
    0.6, 0.6, -1.4, 0.2, 0.2, -1.4, -1.6, -1.6, 0, 0, -2.2, -1, 
    -2, -1.6, -1.2, -1.2, -0.8, -0.4, -1.2, -2.2, -0.2, -1.2, 
    -0.6, -1.2, -1.2, -1, -2.6, 0, -1.8, -2.6, 0, -0.6, -0.4, 
    -0.8, -1.4, -1, -2, -2.6, -2.4, -1.6, -0.6, -0.6, -1.6, -1, 
    -1, -0.6, -1.6, -1, -0.4, -0.4, -0.4, -1.8, -2.6, -1.6, -1.8, 
    0.4, -1.6, -2.6, -1.6, -1.2, 2, -2.2, -1.6, -1.6, 0.4, -0.6, 
    -0.8, -0.8, -2.2, -1.8, -1.6, -0.2, -1.8, -0.2, -0.6), Collectivist = c(5.33, 
    5.83, 4.17, 5.67, 4, 5.83, 5.83, 4.5, 4.83, 4.17, 4.33, 5, 
    3.33, 4.67, 4.17, 5.67, 4.5, 4.5, 2, 4, 5.5, 5, 3.67, 5.83, 
    4.5, 5.83, 4.5, 5.5, 4.33, 4.67, 3.83, 5.5, 5.33, 5.33, 5.83, 
    4.83, 5.17, 5.33, 6.67, 4.83, 4.33, 3.67, 4.83, 4.5, 5, 5.67, 
    4.33, 6, 3.67, 3.17, 6.5, 4.5, 3.83, 4.33, 4.33, 5.33, 4.17, 
    2.33, 3.83, 5.33, 5.33, 4.5, 4.17, 5.33, 3.67, 4.33, 3.33, 
    4.33, 5, 5.83, 4.67, 5.33, 6.17, 5.5, 4.33, 3.17, 3.33, 4.33, 
    5.5, 4.17, 5, 6.17, 3.33, 5.33, 3.83, 3.5, 4.67, 5, 5.67, 
    5.67, 4.33, 2.17, 5.83, 5, 4.83, 4.83, 3, 3.5, 4.83, 2.83, 
    5.67, 5.67, 3.83, 6, 4.5, 5, 5.17, 5.17, 5.17), Collectivist.C = c(0.08, 
    0.58, -1.08, 0.42, -1.25, 0.58, 0.58, -0.75, -0.42, -1.08, 
    -0.92, -0.25, -1.92, -0.58, -1.08, 0.42, -0.75, -0.75, -3.25, 
    -1.25, 0.25, -0.25, -1.58, 0.58, -0.75, 0.58, -0.75, 0.25, 
    -0.92, -0.58, -1.42, 0.25, 0.08, 0.08, 0.58, -0.42, -0.08, 
    0.08, 1.42, -0.42, -0.92, -1.58, -0.42, -0.75, -0.25, 0.42, 
    -0.92, 0.75, -1.58, -2.08, 1.25, -0.75, -1.42, -0.92, -0.92, 
    0.08, -1.08, -2.92, -1.42, 0.08, 0.08, -0.75, -1.08, 0.08, 
    -1.58, -0.92, -1.92, -0.92, -0.25, 0.58, -0.58, 0.08, 0.92, 
    0.25, -0.92, -2.08, -1.92, -0.92, 0.25, -1.08, -0.25, 0.92, 
    -1.92, 0.08, -1.42, -1.75, -0.58, -0.25, 0.42, 0.42, -0.92, 
    -3.08, 0.58, -0.25, -0.42, -0.42, -2.25, -1.75, -0.42, -2.42, 
    0.42, 0.42, -1.42, 0.75, -0.75, -0.25, -0.08, -0.08, -0.08
    ), Resistance.to.change = c(3.35, 3.41, 2.82, 4.12, 3.06, 
    4.35, 2.82, 3.29, 2.53, 3.24, 3.53, 3, 3.24, 4.18, 3.35, 
    4.35, 4.29, 4.29, 2.76, 3.59, 4.29, 2.88, 2.41, 3.29, 3.24, 
    3.94, 3.94, 3.71, 3.82, 3.06, 3.65, 3.94, 3.53, 2.71, 3.94, 
    4.12, 2.82, 3.59, 3.47, 2, 3.35, 3.24, 2.53, 3.59, 2.88, 
    3.47, 2.65, 4.53, 2.47, 4.24, 1.94, 3.53, 2.24, 3.35, 6, 
    3.47, 3.71, 3.29, 4.35, 4.82, 3.35, 3, 3.41, 2.12, 2.82, 
    2.65, 3.65, 2.47, 4.06, 5, 2.76, 3.06, 3.59, 2.65, 2.18, 
    3.71, 2, 3.88, 3.82, 3.88, 3.65, 3.06, 3.94, 3.47, 2.59, 
    2.12, 2.53, 2.29, 3.06, 2.88, 4.12, 2.41, 3.18, 3.18, 2.82, 
    2.41, 4.06, 4.24, 3.76, 2.94, 2.88, 4.41, 2.94, 2.47, 2.35, 
    2.65, 2.47, 3.41, 3.24), Resistance.to.change.C = c(0.06, 
    0.12, -0.47, 0.82, -0.24, 1.06, -0.47, 0, -0.76, -0.06, 0.24, 
    -0.29, -0.06, 0.88, 0.06, 1.06, 1, 1, -0.53, 0.29, 1, -0.41, 
    -0.88, 0, -0.06, 0.65, 0.65, 0.41, 0.53, -0.24, 0.35, 0.65, 
    0.24, -0.59, 0.65, 0.82, -0.47, 0.29, 0.18, -1.29, 0.06, 
    -0.06, -0.76, 0.29, -0.41, 0.18, -0.65, 1.24, -0.82, 0.94, 
    -1.35, 0.24, -1.06, 0.06, 2.71, 0.18, 0.41, 0, 1.06, 1.53, 
    0.06, -0.29, 0.12, -1.18, -0.47, -0.65, 0.35, -0.82, 0.76, 
    1.71, -0.53, -0.24, 0.29, -0.65, -1.12, 0.41, -1.29, 0.59, 
    0.53, 0.59, 0.35, -0.24, 0.65, 0.18, -0.71, -1.18, -0.76, 
    -1, -0.24, -0.41, 0.82, -0.88, -0.12, -0.12, -0.47, -0.88, 
    0.76, 0.94, 0.47, -0.35, -0.41, 1.12, -0.35, -0.82, -0.94, 
    -0.65, -0.82, 0.12, -0.06), Core.self.evaluation = c(6.17, 
    2.58, 4.5, 5.17, 5.67, 4.67, 5.33, 5.25, 5, 5.83, 5.42, 4.83, 
    5.58, 4.5, 4.58, 3.42, 4.42, 3.58, 3.33, 5.42, 3.42, 5.67, 
    4.08, 4.92, 5.25, 4.25, 3.75, 5, 4.33, 6.08, 4.5, 4.08, 6.58, 
    5.75, 4.42, 5.5, 4.42, 4.58, 6, 6.33, 5.08, 6.33, 4.58, 5.58, 
    5.92, 5.25, 3.83, 5.25, 4.33, 5.17, 5.17, 4.58, 5.08, 5, 
    5.67, 5.25, 4.42, 5.67, 5.5, 4.67, 4.5, 4.58, 3.58, 4.67, 
    5.83, 5, 5.17, 4.42, 5.08, 2.83, 3.92, 5.25, 5.08, 5.42, 
    5.5, 4.5, 3.75, 5.33, 3.42, 4.5, 4.5, 4.83, 5, 4.17, 5.08, 
    3.92, 5.5, 6.17, 4, 4.92, 5.92, 6.33, 5.75, 5.58, 5.08, 5.33, 
    4.17, 4, 3.67, 4.58, 5.25, 4.75, 5.92, 5.83, 4.33, 5.42, 
    5.92, 6, 5), Core.self.evaluation.C = c(0.58, -3, -1.08, 
    -0.42, 0.08, -0.92, -0.25, -0.33, -0.58, 0.25, -0.17, -0.75, 
    0, -1.08, -1, -2.17, -1.17, -2, -2.25, -0.17, -2.17, 0.08, 
    -1.5, -0.67, -0.33, -1.33, -1.83, -0.58, -1.25, 0.5, -1.08, 
    -1.5, 1, 0.17, -1.17, -0.08, -1.17, -1, 0.42, 0.75, -0.5, 
    0.75, -1, 0, 0.33, -0.33, -1.75, -0.33, -1.25, -0.42, -0.42, 
    -1, -0.5, -0.58, 0.08, -0.33, -1.17, 0.08, -0.08, -0.92, 
    -1.08, -1, -2, -0.92, 0.25, -0.58, -0.42, -1.17, -0.5, -2.75, 
    -1.67, -0.33, -0.5, -0.17, -0.08, -1.08, -1.83, -0.25, -2.17, 
    -1.08, -1.08, -0.75, -0.58, -1.42, -0.5, -1.67, -0.08, 0.58, 
    -1.58, -0.67, 0.33, 0.75, 0.17, 0, -0.5, -0.25, -1.42, -1.58, 
    -1.92, -1, -0.33, -0.83, 0.33, 0.25, -1.25, -0.17, 0.33, 
    0.42, -0.58), Age = structure(c(2L, 3L, 2L, 4L, 3L, 2L, 3L, 
    2L, 2L, 2L, 3L, 4L, 4L, 2L, 2L, 3L, 3L, 2L, 3L, 2L, 2L, 3L, 
    4L, 1L, 1L, 3L, 3L, 3L, 1L, 3L, 3L, 3L, 2L, 2L, 3L, 3L, 2L, 
    4L, 3L, 1L, 3L, 2L, 2L, 4L, 2L, 4L, 1L, 3L, 3L, 4L, 3L, 3L, 
    2L, 3L, 3L, 1L, 2L, 3L, 3L, 4L, 3L, 2L, 1L, 3L, 2L, 3L, 1L, 
    3L, 3L, 1L, 1L, 4L, 3L, 3L, 1L, 3L, 2L, 3L, 3L, 4L, 2L, 4L, 
    2L, 4L, 3L, 1L, 2L, 2L, 3L, 2L, 2L, 3L, 2L, 1L, 3L, 1L, 1L, 
    2L, 2L, 3L, 2L, 3L, 2L, 3L, 2L, 3L, 2L, 4L, 3L), .Label = c("21-30 years", 
    "31-40 years", "41-50 years", "51-60 years"), class = "factor"), 
    Age.1 = c(2L, 3L, 2L, 4L, 3L, 2L, 3L, 2L, 2L, 2L, 3L, 4L, 
    4L, 2L, 2L, 3L, 3L, 2L, 3L, 2L, 2L, 3L, 4L, 1L, 1L, 3L, 3L, 
    3L, 1L, 3L, 3L, 3L, 2L, 2L, 3L, 3L, 2L, 4L, 3L, 1L, 3L, 2L, 
    2L, 4L, 2L, 4L, 1L, 3L, 3L, 4L, 3L, 3L, 2L, 3L, 3L, 1L, 2L, 
    3L, 3L, 4L, 3L, 2L, 1L, 3L, 2L, 3L, 1L, 3L, 3L, 1L, 1L, 4L, 
    3L, 3L, 1L, 3L, 2L, 3L, 3L, 4L, 2L, 4L, 2L, 4L, 3L, 1L, 2L, 
    2L, 3L, 2L, 2L, 3L, 2L, 1L, 3L, 1L, 1L, 2L, 2L, 3L, 2L, 3L, 
    2L, 3L, 2L, 3L, 2L, 4L, 3L), Gender = structure(c(1L, 2L, 
    2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 
    1L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 
    2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 
    2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L, 
    1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 
    2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 
    2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 
    1L, 1L), .Label = c("Female", "Male"), class = "factor"), 
    Education = structure(c(4L, 5L, 4L, 4L, 5L, 3L, 4L, 4L, 4L, 
    3L, 3L, 4L, 2L, 4L, 3L, 4L, 3L, 5L, 4L, 4L, 4L, 3L, 5L, 4L, 
    4L, 3L, 4L, 3L, 4L, 5L, 4L, 2L, 5L, 4L, 1L, 4L, 4L, 5L, 4L, 
    4L, 3L, 4L, 4L, 3L, 4L, 4L, 3L, 4L, 2L, 4L, 2L, 5L, 4L, 4L, 
    4L, 1L, 3L, 3L, 4L, 4L, 4L, 3L, 3L, 5L, 3L, 3L, 2L, 3L, 4L, 
    3L, 2L, 3L, 4L, 3L, 4L, 3L, 2L, 4L, 3L, 3L, 4L, 4L, 3L, 4L, 
    4L, 3L, 3L, 4L, 4L, 4L, 4L, 5L, 4L, 2L, 4L, 4L, 3L, 2L, 3L, 
    4L, 4L, 4L, 4L, 3L, 3L, 4L, 3L, 4L, 3L), .Label = c("High School / Secondary School", 
    "Diploma", "Bachelor Degree", "Postgraduate Diploma / Masters", 
    "PhD"), class = "factor"), Level.of.Education.1 = c(4L, 5L, 
    4L, 4L, 5L, 3L, 4L, 4L, 4L, 3L, 3L, 4L, 2L, 4L, 3L, 4L, 3L, 
    5L, 4L, 4L, 4L, 3L, 5L, 4L, 4L, 3L, 4L, 3L, 4L, 5L, 4L, 2L, 
    5L, 4L, 1L, 4L, 4L, 5L, 4L, 4L, 3L, 4L, 4L, 3L, 4L, 4L, 3L, 
    4L, 2L, 4L, 2L, 5L, 4L, 4L, 4L, 1L, 3L, 3L, 4L, 4L, 4L, 3L, 
    3L, 5L, 3L, 3L, 2L, 3L, 4L, 3L, 2L, 3L, 4L, 3L, 4L, 3L, 2L, 
    4L, 3L, 3L, 4L, 4L, 3L, 4L, 4L, 3L, 3L, 4L, 4L, 4L, 4L, 5L, 
    4L, 2L, 4L, 4L, 3L, 2L, 3L, 4L, 4L, 4L, 4L, 3L, 3L, 4L, 3L, 
    4L, 3L), Manager = structure(c(2L, 1L, 1L, 1L, 2L, 2L, 1L, 
    2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 
    2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 2L, 
    1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 
    2L, 2L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 
    1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L), .Label = c("No", 
    "Yes"), class = "factor")), .Names = c("ResponseID", "Constructive.voice.behaviour", 
"Power.distance", "Power.distance.C", "Collectivist", "Collectivist.C", 
"Resistance.to.change", "Resistance.to.change.C", "Core.self.evaluation", 
"Core.self.evaluation.C", "Age", "Age.1", "Gender", "Education", 
"Level.of.Education.1", "Manager"), row.names = c(NA, -109L), class = "data.frame", labels = structure(c("ResponseID", 
"Constructive voice behaviour", "Power distance", "Power distance C", 
"Collectivist", "Collectivist C", "Resistance to change", "Resistance to change C", 
"Core self evaluation", "Core self evaluation C", "Age", "Age 1", 
"Gender", "Education", "Level of Education 1", "Manager"), .Names = c("ResponseID", 
"Constructive.voice.behaviour", "Power.distance", "Power.distance.C", 
"Collectivist", "Collectivist.C", "Resistance.to.change", "Resistance.to.change.C", 
"Core.self.evaluation", "Core.self.evaluation.C", "Age", "Age.1", 
"Gender", "Education", "Level.of.Education.1", "Manager")))
