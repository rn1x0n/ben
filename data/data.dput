structure(list(ResponseID = structure(c(37L, 67L, 9L, 80L, 91L, 
75L, 54L, 76L, 51L, 73L, 41L, 42L, 88L, 7L, 65L, 4L, 22L, 27L, 
14L, 52L, 74L, 5L, 58L, 49L, 3L, 81L, 31L, 79L, 70L, 18L, 85L, 
84L, 46L, 36L, 92L, 47L, 29L, 56L, 63L, 20L, 6L, 39L, 24L, 66L, 
86L, 50L, 19L, 68L, 78L, 40L, 28L, 90L, 77L, 32L, 53L, 34L, 94L, 
64L, 12L, 59L, 44L, 71L, 38L, 23L, 30L, 26L, 8L, 87L, 10L, 43L, 
11L, 97L, 83L, 33L, 55L, 69L, 13L, 2L, 17L, 16L, 62L, 60L, 25L, 
21L, 98L, 95L, 96L, 89L, 82L, 72L, 45L, 61L, 15L, 93L, 48L, 57L, 
35L), .Label = c("", "R_0D6qvIePgqBMuMt", "R_0jGNEyloritHs3z", 
"R_0OgDBstVCfKmqmV", "R_0rfTPgIRpokEkKh", "R_0rHCMYAFnxqmlZn", 
"R_0USZpagbLCc7IPP", "R_12Kovk0EAqherQo", "R_1CqMwxgZh2MXsG7", 
"R_1Csa4z6OLpD2blp", "R_1gBc3uvafgowUaq", "R_1IpmUjnjiEFkT5E", 
"R_1LTNWK0miT22HLW", "R_1OxfCGDPk8DMDa4", "R_1RqOaVurl6ye2PP", 
"R_1UnzIR2fdUZMRTf", "R_246Q9IoZldcWP1H", "R_25Y56UiuAzaDUup", 
"R_2aB0Fd7rKPxPxaZ", "R_2axZo11Hx70fm3j", "R_2Cwyh9OaysmfcO6", 
"R_2dEVSVeuCmSPkD1", "R_2EE4O4qi8i0VPuq", "R_2OHWlDHf1tN1bsL", 
"R_2qCwxgVOaUtjlw3", "R_2SJ59ZCG53QNNS4", "R_2TR7TWVYihVHD3Q", 
"R_2TTwkqo7cIz8G7y", "R_2xFTKbsq0tmJcg4", "R_2y7t7OmARLGhnqH", 
"R_2ygrCbjczYdFxxO", "R_2ZBKeMikZoIxgLR", "R_33shvl0nMa6oAU1", 
"R_3EKhwNmGg0zuJKX", "R_3eoBbNnGqQDSKAh", "R_3gVz8MNHoNeenS5", 
"R_3JK36cnKu1GgqKV", "R_3lLEAMrvIvcUGNv", "R_3n1vNjq3T8wz1PE", 
"R_3oT19zGy7htGNf7", "R_3PQNwqgK6YhT1bb", "R_3QQ7Zugdoly5SCR", 
"R_3sjDl33BN4HkKuM", "R_3UbJoltXBOUe2jj", "R_3WdhiN6ba6KSKFL", 
"R_3x77eUbTEqaxkJT", "R_40gxfLjwfeHwNMN", "R_4NJduxUr673Zui9", 
"R_4OPRD1g4zROMGEJ", "R_553D4pJ2dClLU8t", "R_57S3Jv4YG7F5NmB", 
"R_5iDIhGa8K1wpI8d", "R_5o1mKsFBvFzrM8p", "R_5zh0UCv5KQnWZK9", 
"R_6FE2FRnWnAWSy2h", "R_6rn1APRxssGN2O9", "R_6sP8UJAan2qzZCl", 
"R_6XBbLmIhxsrDLAp", "R_6yhtps18SLiajv7", "R_79z3Xa8CH3ng1kp", 
"R_8B16vNC4qD3sSuV", "R_8GL1O0vXvupPwCp", "R_8raDTwy7qoRrX3D", 
"R_8xnHbjwSblc5WQ9", "R_9KQQUoGMXVqVClv", "R_9n6fmK9EXtNJlhb", 
"R_9odepHyhc1joxAV", "R_9ZVfYRzRAF9DSbb", "R_afM87BBlj4hFBBP", 
"R_b9saMm10RnvE0Op", "R_bayLB3HtvCml8c5", "R_bEg3hPY9hLVMel7", 
"R_byBhk8WeDzsKDwV", "R_cHKVCksx0OloEEB", "R_cM7sTN1zHLc0B2l", 
"R_cN5cg70dDYOLeDP", "R_cx5bTyUbHHLAKIR", "R_DcrPhDqyqsXChix", 
"R_dfYN18dALTatjP7", "R_dhuJs36wk5Su2Pj", "R_dok1oM7XNr3AZIV", 
"R_e5HPSQxPj5heGup", "R_e5LhTA0KLySBPjD", "R_eaCQ6WCiZPKDORv", 
"R_eDLNZz9ncBfQuQ5", "R_eDUyQ5fUfAG8Pwp", "R_egEPBsGVRufuUGV", 
"R_egvce26Zh7MNabr", "R_elFFRabvDcVTZE9", "R_eQI1aIntjE9ulJH", 
"R_es4fzluUrUz1sEZ", "R_etFBgAO3ba0CIAd", "R_eVgIDV18oLyatbT", 
"R_ewDRpt2hh75sw61", "R_R3MnTwKnjXrbrHP", "R_sXpCYOZwz9lBGwh", 
"R_x0mGMsVzgtWGKdP", "R_ZsJ1EkMtRr0Z7jj"), class = "factor"), 
    Don.t.bypass.boss.upward = c(5, 6.25, 1.5, 3.5, 2.75, 3.25, 
    2.5, 4, 4.75, 1.75, 3, 4.75, 4.75, 4.25, 4.25, 3, 4.75, 3.5, 
    5, 4.5, 4.75, 5.25, 6.25, 2, 4.25, 5, 2, 2.75, 2.25, 2.75, 
    3.25, 3.75, 4.25, 3, 5, 3.25, 1.75, 4, 4, 3.25, 2.75, 2, 
    2.75, 5.25, 3.5, 3.5, 5.25, 4.5, 3, 4, 2.75, 6.25, 5.25, 
    2.5, 5.75, 3.25, 2, 5.25, 4.25, 7, 3.5, 2.25, 6, 1.75, 1.5, 
    3.5, 6, 6, 3.25, 6.25, 3.75, 6.5, 1.25, 3.25, 4.5, 3.25, 
    2.5, 5.5, 7, 4, 3.25, 4.25, 5.25, 2, 2.75, 3, 1.5, 3, 3, 
    2.75, 5.5, 2, 3.5, 4.25, 4.75, 2.5, 5), Presumed.Target.Identification = c(3, 
    3.75, 4.25, 1.75, 2.75, 3.5, 3.75, 1.25, 4.25, 1.75, 3.25, 
    5.5, 3.75, 5, 2, 5, 4, 2.5, 4.25, 3.75, 3.75, 3, 4.75, 1, 
    1.25, 4.5, 2, 4.25, 3, 1.75, 3, 3.75, 4.75, 5.25, 3, 3, 1.75, 
    3.5, 1.5, 4.25, 4, 2.5, 3.25, 2.75, 3, 2.25, 5.5, 3, 4, 3, 
    1.5, 3, 5.25, 3, 3, 5.25, 5, 1.75, 3.5, 5, 4.75, 2, 6, 5, 
    1.75, 4, 3.75, 5, 4.25, 7, 4, 4.5, 2.75, 2, 5, 2.75, 1, 3.5, 
    5, 2.5, 4, 2.25, 3.25, 4.5, 2.25, 2.5, 2, 3.5, 4.75, 4.25, 
    4.5, 2, 3.5, 3.5, 4.75, 3.5, 5.25), Don.t.embarass.boss.publicly = c(4.5, 
    4, 3.5, 5, 3.25, 5.25, 3, 4.75, 5.5, 2.25, 6, 4.5, 5.5, 4.75, 
    6.75, 6, 5, 4.25, 5.75, 4.75, 6.5, 4, 5, 3.75, 3.75, 5.75, 
    2, 4, 5.75, 4.5, 3.5, 2.75, 5.75, 3.25, 5, 3.5, 2, 6, 3.25, 
    5.75, 2.75, 2.25, 4, 5.25, 3.5, 3.5, 6, 4.5, 4, 4.75, 6.5, 
    5.25, 5.25, 2.5, 6, 5.5, 5.25, 6, 5.25, 6.5, 5.25, 4.5, 6.25, 
    3, 4.75, 4.25, 6.25, 5.75, 5, 4.25, 4, 3, 3.75, 3.75, 5.25, 
    3.5, 2, 4.75, 6.25, 5.5, 4.75, 6.75, 4.5, 6, 4.25, 6.75, 
    3, 3.5, 6, 5.75, 5.5, 2, 6.25, 6.5, 4, 4.25, 4.25), Negative.career.consequences.of.voice = c(2.25, 
    3, 2, 2.25, 2.75, 4, 3, 3.75, 4, 1.5, 2, 6.5, 3.25, 4, 1.5, 
    2, 4, 4, 3.25, 2.25, 3.5, 4, 6.5, 2.75, 3.5, 5.75, 1.75, 
    5.75, 3.75, 2.25, 4, 2.25, 2.75, 2.25, 3, 3.25, 1.75, 4.5, 
    5, 2.5, 2, 3.25, 5, 3.75, 1.75, 3.25, 4.75, 2.5, 4.25, 3.5, 
    1.75, 5, 3.75, 3.5, 3, 4, 4.5, 2.5, 3.25, 5.75, 6, 2.25, 
    3.75, 5, 3, 3.25, 3.75, 6, 4.5, 4.5, 4.75, 4.5, 2.75, 3, 
    2, 3, 1, 5.5, 6.25, 3.25, 4, 2, 4.5, 2.25, 4.5, 1.5, 1.25, 
    2, 2.25, 3, 3, 2, 4, 4.25, 5.25, 3.25, 3.5), Constructive.Voice.Behavior = c(5, 
    5.4, 6.2, 4, 5, 6, 6, 6.2, 6, 5.8, 6, 5, 4.6, 4, 7, 4.4, 
    4.6, 4, 4.8, 5, 5, 5, 6, 7, 7, 4.4, 4.4, 4, 6, 5, 5.6, 6, 
    7, 7, 5, 4.2, 5, 5, 5.6, 7, 6, 3.6, 5, 4.4, 6, 6, 7, 5, 5, 
    5.6, 5.8, 4.4, 5.2, 5.8, 3.4, 5.2, 4.8, 5.8, 5.8, 5, 6, 5.6, 
    5.4, 6, 5.2, 5.4, 5.6, 6.6, 6, 2, 7, 5.4, 6, 6, 5, 5, 7, 
    5, 4.4, 3.8, 4.6, 6, 5.8, 6, 6, 7, 6, 6.6, 6, 6, 5.8, 6, 
    5.6, 5.4, 5.8, 5.2, 5.6), Power.Distance = c(4.2, 1.2, 2.2, 
    1.6, 3.4, 3, 1, 1.6, 6.6, 1, 3, 2.6, 5.6, 2.6, 1.6, 1.4, 
    3.2, 2, 2.2, 3, 3, 2.8, 4, 2, 1, 3.4, 1.6, 1, 1.6, 2.6, 1, 
    1, 3, 1.4, 4.2, 4.2, 2.2, 3.8, 3.8, 2.2, 2, 2, 3.6, 3.6, 
    1.4, 2.6, 1.6, 2, 2.4, 2.4, 2.8, 3.2, 2.4, 1.4, 3.4, 2.4, 
    3, 2.4, 2.4, 2.6, 1, 3.6, 1.8, 1, 3.6, 3, 3.2, 2.8, 2.2, 
    2.6, 1.6, 1, 1.2, 2, 3, 3, 2, 2.6, 2.6, 3, 2, 2.6, 3.2, 3.2, 
    3.2, 1.8, 1, 2, 1.8, 4, 2, 1, 2, 2.4, 5.6, 1.4, 2), Collectivist = c(5.33, 
    5.83, 4.17, 5.67, 4, 5.83, 5.83, 4.5, 4.83, 4.17, 4.33, 5, 
    3.33, 4.67, 4.17, 5.67, 4.5, 4.5, 2, 4, 5.5, 5, 3.67, 5.83, 
    4.5, 5.83, 4.5, 5.5, 4.33, 4.67, 3.83, 5.5, 5.33, 5.33, 5.83, 
    4.83, 5.17, 5.33, 6.67, 4.83, 4.33, 3.67, 4.83, 4.5, 5, 5.67, 
    4.33, 6, 3.67, 3.17, 6.5, 4.5, 3.83, 4.33, 4.33, 5.33, 4.17, 
    2.33, 3.83, 5.33, 5.33, 4.5, 4.17, 5.33, 3.67, 4.33, 3.33, 
    4.33, 5, 5.83, 4.67, 5.33, 6.17, 5.5, 4.33, 3.17, 3.33, 4.33, 
    5.5, 4.17, 5, 6.17, 3.33, 5.33, 3.83, 3.5, 4.67, 5, 5.67, 
    5.67, 4.33, 2.17, 5.83, 5, 4.83, 4.83, 3), Resistance.to.change = c(3.35, 
    3.41, 2.82, 4.12, 3.06, 4.35, 2.82, 3.29, 2.53, 3.24, 3.53, 
    3, 3.24, 4.18, 3.35, 4.35, 4.29, 4.29, 2.76, 3.59, 4.29, 
    2.88, 2.41, 3.29, 3.24, 3.94, 3.94, 3.71, 3.82, 3.06, 3.65, 
    3.94, 3.53, 2.71, 3.94, 4.12, 2.82, 3.59, 3.47, 2, 3.35, 
    3.24, 2.53, 3.59, 2.88, 3.47, 2.65, 4.53, 2.47, 4.24, 1.94, 
    3.53, 2.24, 3.35, 6, 3.47, 3.71, 3.29, 4.35, 4.82, 3.35, 
    3, 3.41, 2.12, 2.82, 2.65, 3.65, 2.47, 4.06, 5, 2.76, 3.06, 
    3.59, 2.65, 2.18, 3.71, 2, 3.88, 3.82, 3.88, 3.65, 3.06, 
    3.94, 3.47, 2.59, 2.12, 2.53, 2.29, 3.06, 2.88, 4.12, 2.41, 
    3.18, 3.18, 2.82, 2.41, 4.06), Core.Self.Evaluation.Scale = c(6.17, 
    2.58, 4.5, 5.17, 5.67, 4.67, 5.33, 5.25, 5, 5.83, 5.42, 4.83, 
    5.58, 4.5, 4.58, 3.42, 4.42, 3.58, 3.33, 5.42, 3.42, 5.67, 
    4.08, 4.92, 5.25, 4.25, 3.75, 5, 4.33, 6.08, 4.5, 4.08, 6.58, 
    5.75, 4.42, 5.5, 4.42, 4.58, 6, 6.33, 5.08, 6.33, 4.58, 5.58, 
    5.92, 5.25, 3.83, 5.25, 4.33, 5.17, 5.17, 4.58, 5.08, 5, 
    5.67, 5.25, 4.42, 5.67, 5.5, 4.67, 4.5, 4.58, 3.58, 4.67, 
    5.83, 5, 5.17, 4.42, 5.08, 2.83, 3.92, 5.25, 5.08, 5.42, 
    5.5, 4.5, 3.75, 5.33, 3.42, 4.5, 4.5, 4.83, 5, 4.17, 5.08, 
    3.92, 5.5, 6.17, 4, 4.92, 5.92, 6.33, 5.75, 5.58, 5.08, 5.33, 
    4.17), Openess.to.change = c(7.75, 5.13, 6.88, 5.88, 5.38, 
    5.88, 7.75, 7.5, 6.38, 7.88, 6.75, 6.88, 7.25, 6, 7.25, 4.88, 
    7, 8.25, 7.5, 7.13, 5.5, 7.13, 6.75, 8.13, 6, 5, 5.63, 6.13, 
    7, 6.75, 6.13, 4.88, 7.25, 7.5, 6.13, 4.88, 5.25, 4.75, 6.63, 
    7, 6.25, 6.88, 7.25, 5.63, 6.88, 7.63, 6.38, 6.75, 9, 7.25, 
    7.63, 7.88, 7.25, 7, 3.25, 7.5, 6, 5.5, 5.25, 5.88, 7.25, 
    4.75, 5, 7.38, 6.63, 7.63, 6.88, 9, 7, 5.5, 7.75, 7.38, 4.25, 
    6.88, 6.88, 5.75, 6.25, 7.5, 6.88, 5.5, 6.13, 5.63, 7.75, 
    7.5, 5.88, 7.63, 8, 8.13, 7.38, 5.88, 5.5, 8.75, 6.5, 6.25, 
    7.25, 8.75, 5.5), Age = structure(c(2L, 3L, 2L, 4L, 3L, 2L, 
    3L, 2L, 2L, 2L, 3L, 4L, 4L, 2L, 2L, 3L, 3L, 2L, 3L, 2L, 2L, 
    3L, 4L, 1L, 1L, 3L, 3L, 3L, 1L, 3L, 3L, 3L, 2L, 2L, 3L, 3L, 
    2L, 4L, 3L, 1L, 3L, 2L, 2L, 4L, 2L, 4L, 1L, 3L, 3L, 4L, 3L, 
    3L, 2L, 3L, 3L, 1L, 2L, 3L, 3L, 4L, 3L, 2L, 1L, 3L, 2L, 3L, 
    1L, 3L, 3L, 1L, 1L, 4L, 3L, 3L, 1L, 3L, 2L, 3L, 3L, 4L, 2L, 
    4L, 2L, 4L, 3L, 1L, 2L, 2L, 3L, 2L, 2L, 3L, 2L, 1L, 3L, 1L, 
    1L), .Label = c("1", "2", "3", "4"), class = "factor"), Gender = structure(c(2L, 
    1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 
    1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 
    2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 
    2L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 
    2L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 
    2L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 
    2L, 1L, 1L, 1L, 2L, 2L), .Label = c("1", "2"), class = "factor"), 
    Level.of.education = structure(c(4L, 5L, 4L, 4L, 5L, 3L, 
    4L, 4L, 4L, 3L, 3L, 4L, 2L, 4L, 3L, 4L, 3L, 5L, 4L, 4L, 4L, 
    3L, 5L, 4L, 4L, 3L, 4L, 3L, 4L, 5L, 4L, 2L, 5L, 4L, 1L, 4L, 
    4L, 5L, 4L, 4L, 3L, 4L, 4L, 3L, 4L, 4L, 3L, 4L, 2L, 4L, 2L, 
    5L, 4L, 4L, 4L, 1L, 3L, 3L, 4L, 4L, 4L, 3L, 3L, 5L, 3L, 3L, 
    2L, 3L, 4L, 3L, 2L, 3L, 4L, 3L, 4L, 3L, 2L, 4L, 3L, 3L, 4L, 
    4L, 3L, 4L, 4L, 3L, 3L, 4L, 4L, 4L, 4L, 5L, 4L, 2L, 4L, 4L, 
    3L), .Label = c("1", "2", "3", "4", "5"), class = "factor"), 
    Num.countries.12.months = structure(c(1L, 1L, 2L, 1L, 1L, 
    1L, 1L, 3L, 1L, 1L, 2L, 3L, 4L, 3L, 3L, 2L, 1L, 2L, 2L, 3L, 
    1L, 1L, 3L, 1L, 1L, 1L, 2L, 2L, 1L, 5L, 2L, 2L, 2L, 3L, 1L, 
    4L, 1L, 1L, 3L, 1L, 2L, 1L, 4L, 2L, 2L, 5L, 2L, 3L, 2L, 2L, 
    3L, 2L, 3L, 2L, 1L, 1L, 1L, 1L, 4L, 2L, 2L, 2L, 1L, 4L, 1L, 
    1L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 5L, 5L, 2L, 1L, 
    1L, 1L, 5L, 2L, 5L, 1L, 1L, 4L, 2L, 1L, 1L, 4L, 1L, 1L, 5L, 
    4L, 1L), .Label = c("1", "2", "3", "4", "5"), class = "factor"), 
    Countries.Asia = structure(c(1L, 1L, 1L, 1L, 1L, 2L, 2L, 
    2L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 
    1L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 
    2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 
    2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L
    ), .Label = c("0", "1"), class = "factor"), Countries.Europe.Australia = structure(c(1L, 
    2L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 
    1L, 1L, 1L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 
    2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 
    1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 
    2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 
    1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 
    2L, 1L, 2L, 2L, 2L, 2L), .Label = c("0", "1"), class = "factor"), 
    Countries.Latin.America = structure(c(2L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 
    1L, 1L), .Label = c("0", "1"), class = "factor"), Countries.North.America = structure(c(1L, 
    1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 
    1L, 1L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 
    1L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 
    2L, 1L, 1L, 1L, 2L, 1L), .Label = c("0", "1"), class = "factor"), 
    Countries.Africa = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 
    2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L
    ), .Label = c("0", "1"), class = "factor"), Countries.list = structure(c(10L, 
    19L, 68L, 19L, 19L, 35L, 35L, 74L, 50L, 43L, 37L, 2L, 14L, 
    53L, 11L, 17L, 35L, 35L, 36L, 63L, 57L, 51L, 42L, 41L, 3L, 
    34L, 58L, 21L, 33L, 8L, 70L, 21L, 7L, 64L, 49L, 45L, 1L, 
    19L, 67L, 16L, 72L, 1L, 18L, 13L, 55L, 48L, 29L, 39L, 56L, 
    70L, 6L, 20L, 28L, 61L, 19L, 9L, 9L, 9L, 22L, 60L, 27L, 40L, 
    47L, 5L, 46L, 19L, 53L, 23L, 69L, 35L, 52L, 65L, 3L, 12L, 
    54L, 24L, 49L, 62L, 26L, 44L, 35L, 66L, 32L, 59L, 73L, 30L, 
    57L, 15L, 31L, 4L, 10L, 38L, 25L, 9L, 53L, 71L, 46L), .Label = c("Australia", 
    "Australia, New Zealand, Hong Kong.", "Brazil", "Buenos Aires, Argentina", 
    "Canada, Denmark, France, Switzerland", "Canada, Germany, UK", 
    "Ch", "China, Netherlands, Germnay, Switzerland, US", "Croatia", 
    "Ecuador", "Egypt, Saudi Arabia, Ireland", "England and Australia", 
    "England, Germany", "England, Hong Kong, Switzerland, Portugal", 
    "England, Thailand, Czech Republic, Switzerland", "france", 
    "France, UK", "France, UK, USA, Switzerland", "Germany", 
    "germany, indonesia", "Germany, Switzerland", "Holland, Switzerland, Ireland, Germany", 
    "Hong Kong, Australia", "Hong Kong, SIngapore", "India", 
    "India, Switzerland", "Italy", "Ivory Coast, France, Switzerland", 
    "Kenya", "KENYA", "Kenya and Australia", "Kenya, UK, Malaysia ", 
    "Lebanon", "malaysia", "Malaysia", "Malaysia, China", "Malaysia, Japan ", 
    "Malaysia, Singapore, Australia, USA", "Malaysia, Singapore, Indonesia", 
    "Malaysia, UK", "Mexico", "Mozambique, England, Switzerland", 
    "na", "Nil", "Norway, USA, Germany, Switzerland", "Romania", 
    "Russia", "Saudi A. Lebanon, , UAE, Egypt, Canada", "Singapore", 
    "Spain", "Sweden", "switzerland", "Switzerland", "Switzerland & Belgium", 
    "Turkey, Switzerland", "U.S.A., Germany", "UK", "UK ; Switzerland", 
    "UK (Scotland), Kenya", "UK & Switzerland", "uk and Switzerland", 
    "UK, Belgium, Germany, USA, Switzerland, Spain", "UK, Ireland, Australia", 
    "UK, Ireland, Germany", "UK, Switzerland", "United States, Australia, Taiwan", 
    "United States, Germany, Finland", "United States, Netherlands", 
    "US", "USA Germany", "USA, ENGLAND, FRANCE, SWITZERLAND", 
    "USA, Spain", "usa, switzerland, france, singapore, UAE", 
    "Vietnam, Germany, Australia"), class = "factor"), Manager = structure(c(1L, 
    2L, 2L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 
    1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 
    1L, 2L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 1L, 
    2L, 1L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 
    1L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 2L, 1L, 
    1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 
    1L, 1L, 2L, 1L, 2L, 2L), .Label = c("1", "2"), class = "factor"), 
    Duration.current.organisation = structure(c(1L, 3L, 3L, 4L, 
    3L, 1L, 1L, 2L, 4L, 1L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 
    3L, 2L, 3L, 1L, 1L, 1L, 1L, 2L, 5L, 1L, 1L, 1L, 4L, 1L, 2L, 
    4L, 2L, 1L, 5L, 4L, 1L, 2L, 1L, 1L, 2L, 3L, 4L, 1L, 1L, 2L, 
    3L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 
    1L, 5L, 1L, 2L, 3L, 1L, 2L, 5L, 3L, 2L, 1L, 2L, 3L, 1L, 3L, 
    2L, 1L, 1L, 1L, 4L, 3L, 1L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 
    5L, 1L, 1L), .Label = c("1", "2", "3", "4", "5"), class = "factor")), .Names = c("ResponseID", 
"Don.t.bypass.boss.upward", "Presumed.Target.Identification", 
"Don.t.embarass.boss.publicly", "Negative.career.consequences.of.voice", 
"Constructive.Voice.Behavior", "Power.Distance", "Collectivist", 
"Resistance.to.change", "Core.Self.Evaluation.Scale", "Openess.to.change", 
"Age", "Gender", "Level.of.education", "Num.countries.12.months", 
"Countries.Asia", "Countries.Europe.Australia", "Countries.Latin.America", 
"Countries.North.America", "Countries.Africa", "Countries.list", 
"Manager", "Duration.current.organisation"), row.names = c(NA, 
97L), class = "data.frame", labels = structure(c("ResponseID", 
"Don't bypass boss upward", "Presumed Target Identification", 
"Don't embarass boss publicly", "Negative career\nconsequences of voice", 
"Constructive\nVoice Behavior", "Power Distance", "Collectivist", 
"Resistance to change", "Core Self\nEvaluation Scale", "Openess to change", 
"Age", "Gender", "Level of education", "Num countries 12 months", 
"Countries Asia", "Countries Europe/Australia", "Countries Latin America", 
"Countries North America", "Countries Africa", "Countries list", 
"Manager", "Duration current organisation"), .Names = c("ResponseID", 
"Don.t.bypass.boss.upward", "Presumed.Target.Identification", 
"Don.t.embarass.boss.publicly", "Negative.career.consequences.of.voice", 
"Constructive.Voice.Behavior", "Power.Distance", "Collectivist", 
"Resistance.to.change", "Core.Self.Evaluation.Scale", "Openess.to.change", 
"Age", "Gender", "Level.of.education", "Num.countries.12.months", 
"Countries.Asia", "Countries.Europe.Australia", "Countries.Latin.America", 
"Countries.North.America", "Countries.Africa", "Countries.list", 
"Manager", "Duration.current.organisation")))
